version: '3.7'

services:

  notebook:
    container_name: jupyterlab
    build:
      context: ./datanoob/docker
    ports:
      # jupyterlab
      - "8888:8888"
      # mlflow
      - "5000:5000"
      # shapash
      - "8050:8050"
      # explainer
      - "3050:3050"
      # mercury drift detection
      - "8000:8000"
    volumes:
      - .:/usr/src
      - ./datanoob/datanooblol:/opt/conda/lib/python3.9/datanooblol
    working_dir: /usr/src
      # - /usr/src
    # environment:
    #   FLASK_DEBUG: "on"
    #   FLASK_APP: ./app/app.py
    networks:
      app_net:
        ipv4_address: 192.168.0.5
    # entrypoint: ["jupyter", "lab", "--ip='*'","--port=8888","--NotebookApp.token=''", "--NotebookApp.password='sha1:a60aa670ae56:dd1afbc5d9585af67965bc9fe187f315ae31f3d8'", "--allow-root", "&"]
    # entrypoint: ["/usr/src/start_service.sh"]
    # command: "/usr/src/start_service.sh || true"
    # command: >
    #   sh -c "/usr/src/start_service.sh"
    # entrypoint: ["bash", "/usr/src/start_service.sh", "&&" ,"top"]
    # jupyter lab --no-browser --allow-root --autoreload --port=8888 --ip='*' --NotebookApp.token='' --NotebookApp.password=sha1:a60aa670ae56:dd1afbc5d9585af67965bc9fe187f315ae31f3d8
    tty: true # if no command exec, the container still alive

  # flask:
  #   container_name: flask_app
  #   build:
  #     context: ./app
  #   restart: always 
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./app/app:/app
  #     # - .:/usr/src
  #   networks:
  #     app_net:
  #       ipv4_address: 192.168.0.4

  # streamlit:
  #   container_name: streamlit_app
  #   build:
  #     context: ./streamlit
  #   restart: always 
  #   ports:
  #     - "8501:8501"
  #   volumes:
  #     # - ./streamlit/app:/app
  #     # - ./lab:/lab
  #     - .:/usr/src
  #   networks:
  #     app_net:
  #       ipv4_address: 192.168.0.6

  # db:
  #   container_name: postgresql_db
  #   image: postgres
    # automatically restarts the container - Docker daemon on restart or 
    # the container itself is manually restarted
    # restart: always 

  #   volumes:
  #     - ./data/db:/var/lib/postgresql/data

  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: root
  #     POSTGRES_DB: test_db
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     app_net:
  #       ipv4_address: 192.168.0.2  

  # pgadmin:
  #   container_name: pgadmin4_admin
  #   image: dpage/pgadmin4
  #   restart: always

  #   volumes:
  #     - ./data/pgadmin-data:/var/lib/pgadmin

  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: root@root.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #     # PGADMIN_LISTEN_PORT = 80
  #   ports:
  #     - "5050:80"
  #   networks:
  #     app_net:
  #       ipv4_address: 192.168.0.3
    
networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
          gateway: 192.168.0.1